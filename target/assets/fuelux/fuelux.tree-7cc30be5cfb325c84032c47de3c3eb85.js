!function(factory){"function"==typeof define&&define.amd?define(["jquery"],factory):factory(jQuery)}(function($){var old=$.fn.tree,Tree=function(element,options){this.$element=$(element),this.options=$.extend({},$.fn.tree.defaults,options),this.$element.on("click.fu.tree",".tree-item",$.proxy(function(ev){this.selectItem(ev.currentTarget)},this)),this.$element.on("click.fu.tree",".tree-branch-header",$.proxy(function(ev){this.openFolder(ev.currentTarget)},this)),this.render()};Tree.prototype={constructor:Tree,destroy:function(){return this.$element.find("li:not([data-template])").remove(),this.$element.remove(),this.$element[0].outerHTML},render:function(){this.populate(this.$element)},populate:function($el){var self=this,$parent=$el.hasClass("tree")?$el:$el.parent(),loader=$parent.find(".tree-loader:eq(0)"),treeData=$parent.data();loader.removeClass("hide"),this.options.dataSource(treeData?treeData:{},function(items){loader.addClass("hide"),$.each(items.data,function(index,value){var $entity;if("folder"===value.type){$entity=self.$element.find("[data-template=treebranch]:eq(0)").clone().removeClass("hide").removeAttr("data-template"),$entity.data(value),$entity.find(".tree-branch-name > .tree-label").html(value.text||value.name);var header=$entity.find(".tree-branch-header");"icon-class"in value&&header.find("i").addClass(value["icon-class"]),"additionalParameters"in value&&"item-selected"in value.additionalParameters&&1==value.additionalParameters["item-selected"]&&setTimeout(function(){header.trigger("click")},0)}else"item"===value.type&&($entity=self.$element.find("[data-template=treeitem]:eq(0)").clone().removeClass("hide").removeAttr("data-template"),$entity.find(".tree-item-name > .tree-label").html(value.text||value.name),$entity.data(value),"additionalParameters"in value&&"item-selected"in value.additionalParameters&&1==value.additionalParameters["item-selected"]&&($entity.addClass("tree-selected"),$entity.find("i").removeClass(self.options["unselected-icon"]).addClass(self.options["selected-icon"])));var attr=value.attr||value.dataAttributes||[];$.each(attr,function(key,value){switch(key){case"cssClass":case"class":case"className":$entity.addClass(value);break;case"data-icon":$entity.find(".icon-item").removeClass().addClass("icon-item "+value),$entity.attr(key,value);break;case"id":$entity.attr(key,value),$entity.attr("aria-labelledby",value+"-label"),$entity.find(".tree-branch-name > .tree-label").attr("id",value+"-label");break;default:$entity.attr(key,value)}}),$el.hasClass("tree-branch-header")?$parent.find(".tree-branch-children:eq(0)").append($entity):$el.append($entity)}),self.$element.trigger("loaded.fu.tree",$parent)})},selectItem:function(el){if(0!=this.options.selectable){var $el=$(el),selData=$el.data(),$all=this.$element.find(".tree-selected"),data=[],$icon=$el.find(".icon-item");this.options.multiSelect?$.each($all,function(index,value){var $val=$(value);$val[0]!==$el[0]&&data.push($(value).data())}):$all[0]!==$el[0]&&($all.removeClass("tree-selected").find("i").removeClass(this.options["selected-icon"]).addClass(this.options["unselected-icon"]),data.push(selData));var eventType="selected";$el.hasClass("tree-selected")?(eventType="deselected",$el.removeClass("tree-selected"),($icon.hasClass(this.options["selected-icon"])||$icon.hasClass(this.options["unselected-icon"]))&&$icon.removeClass(this.options["selected-icon"]).addClass(this.options["unselected-icon"])):($el.addClass("tree-selected"),($icon.hasClass(this.options["selected-icon"])||$icon.hasClass(this.options["unselected-icon"]))&&$icon.removeClass(this.options["unselected-icon"]).addClass(this.options["selected-icon"]),this.options.multiSelect&&data.push(selData)),this.$element.trigger(eventType+".fu.tree",{target:selData,selected:data}),$el.trigger("updated.fu.tree",{selected:data,item:$el,eventType:eventType})}},openFolder:function(el){var $branch,$treeFolderContent,$treeFolderContentFirstChild,$el=$(el);$branch=$el.closest(".tree-branch"),$treeFolderContent=$branch.find(".tree-branch-children"),$treeFolderContentFirstChild=$treeFolderContent.eq(0);var eventType,classToTarget,classToAdd;$el.find("."+$.trim(this.options["close-icon"].replace(/(\s+)/g,"."))).length?(eventType="opened",classToTarget=this.options["close-icon"],classToAdd=this.options["open-icon"],$branch.addClass("tree-open"),$branch.attr("aria-expanded","true"),$treeFolderContentFirstChild.removeClass("hide"),$treeFolderContent.children().length||this.populate($treeFolderContent)):$el.find("."+$.trim(this.options["open-icon"].replace(/(\s+)/g,".")))&&(eventType="closed",classToTarget=this.options["open-icon"],classToAdd=this.options["close-icon"],$branch.removeClass("tree-open"),$branch.attr("aria-expanded","false"),$treeFolderContentFirstChild.addClass("hide"),this.options.cacheItems||$treeFolderContentFirstChild.empty()),$branch.find("> .tree-branch-header .icon-folder").eq(0).removeClass(classToTarget).addClass(classToAdd),this.$element.trigger(eventType+".fu.tree",$branch.data())},selectFolder:function(clickedElement){var $clickedElement=$(clickedElement),$clickedBranch=$clickedElement.closest(".tree-branch"),$selectedBranch=this.$element.find(".tree-branch.tree-selected"),clickedData=$clickedBranch.data(),selectedData=[],eventType="selected";$clickedBranch.hasClass("tree-selected")?(eventType="deselected",$clickedBranch.removeClass("tree-selected")):$clickedBranch.addClass("tree-selected"),this.options.multiSelect?($selectedBranch=this.$element.find(".tree-branch.tree-selected"),$.each($selectedBranch,function(index,value){var $value=$(value);$value[0]!==$clickedElement[0]&&selectedData.push($(value).data())})):$selectedBranch[0]!==$clickedElement[0]&&($selectedBranch.removeClass("tree-selected"),selectedData.push(clickedData)),this.$element.trigger(eventType+".fu.tree",{target:clickedData,selected:selectedData}),$clickedElement.trigger("updated.fu.tree",{selected:selectedData,item:$clickedElement,eventType:eventType})},selectedItems:function(){var $sel=this.$element.find(".tree-selected"),data=[];return $.each($sel,function(index,value){data.push($(value).data())}),data},collapse:function(){var cacheItems=this.options.cacheItems;this.$element.find("."+$.trim(this.options["open-icon"].replace(/(\s+)/g,"."))).each(function(){var $this=$(this).removeClass(this.options["open-icon"]+" "+this.options["close-icon"]).addClass(this.options["close-icon"]),$parent=$this.parent().parent(),$folder=$parent.children(".tree-branch-children");$folder.addClass("hide"),cacheItems||$folder.empty()})}},$.fn.tree=function(option){var methodReturn,args=Array.prototype.slice.call(arguments,1),$set=this.each(function(){var $this=$(this),data=$this.data("fu.tree"),options="object"==typeof option&&option;data||$this.data("fu.tree",data=new Tree(this,options)),"string"==typeof option&&(methodReturn=data[option].apply(data,args))});return void 0===methodReturn?$set:methodReturn},$.fn.tree.defaults={dataSource:function(){},multiSelect:!1,cacheItems:!0,folderSelect:!1},$.fn.tree.Constructor=Tree,$.fn.tree.noConflict=function(){return $.fn.tree=old,this}});